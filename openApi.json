{
  "openapi": "3.0.2",
  "info": {
    "title": "Excuses API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "components": {
    "schemas": {
      "id": {
        "type": "number",
        "description": "Resource id",
        "example": 1
      },
      "description": {
        "type": "string",
        "description": "Resource description"
      },
      "name": {
        "type": "string",
        "description": "Resource name"
      },
      "firstName": {
        "type": "string",
        "example": "Kati"
      },
      "lastName": {
        "type": "string",
        "example": "Karu"
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "firstName": {
            "$ref": "#/components/schemas/firstName"
          },
          "lastName": {
            "$ref": "#/components/schemas/lastName"
          }
        }
      },
      "category": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "createdBy": {
            "$ref": "#/components/schemas/id"
          }
        }
      },
      "excuse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "createdBy": {
            "$ref": "#/components/schemas/id"
          },
          "category": {
            "$ref": "#/components/schemas/id"
          },
          "public": {
            "type": "boolean"
          }
        }
      }
    }
  },
  "paths": {
    "/ping": {
      "get": {
        "tags": ["General operations"],
        "description": "Endpoint for testing if API is operational",
        "responses": {
          "200": {
            "description": "Alive message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alive"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users operations"
        ],
        "description": "Returns list of users",
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users operations"
        ],
        "description": "Create new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "$ref": "#/components/schemas/firstName"
                  },
                  "lastName": {
                    "$ref": "#/components/schemas/lastName"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Required data is missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "No first name": {
                    "value": {
                      "error": "First name is required"
                    }
                  },
                  "No last name": {
                    "value": {
                      "error": "Last name is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Users id",
          "schema": {
            "type": "number"
          }
        }
      ],
      "get": {
        "tags": [
          "Users operations"
        ],
        "description": "Returns user",
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No user found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid id": {
                    "value": {
                      "error": "No valid id provided"
                    }
                  },
                  "No user found": {
                    "value": {
                      "error": "No user found with id: {id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users operations"
        ],
        "description": "Delete user",
        "responses": {
          "204": {
            "description": "User deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "No user found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid id": {
                    "value": {
                      "error": "No valid id provided"
                    }
                  },
                  "No user found": {
                    "value": {
                      "error": "No user found with id: {id}"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users operations"
        ],
        "description": "Update user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "$ref": "#/components/schemas/firstName"
                  },
                  "lastName": {
                    "$ref": "#/components/schemas/lastName"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "No user found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid id": {
                    "value": {
                      "error": "No valid id provided"
                    }
                  },
                  "No user found": {
                    "value": {
                      "error": "No user found with id: {id}"
                    }
                  },
                  "Nothing to update": {
                    "value": {
                      "error": "Nothing to update"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}